{"version":3,"file":"static/js/828.2e98d9e6.chunk.js","mappings":"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","sources":["../node_modules/@ledgerhq/devices/src/hid-framing.ts","../node_modules/@ledgerhq/devices/src/index.ts","../node_modules/@ledgerhq/logs/src/index.ts","../node_modules/@ledgerhq/hw-transport-webhid/src/TransportWebHID.ts","../node_modules/lru-cache/index.js","../node_modules/semver/classes/comparator.js","../node_modules/semver/classes/range.js","../node_modules/semver/classes/semver.js","../node_modules/semver/functions/clean.js","../node_modules/semver/functions/cmp.js","../node_modules/semver/functions/coerce.js","../node_modules/semver/functions/compare-build.js","../node_modules/semver/functions/compare-loose.js","../node_modules/semver/functions/compare.js","../node_modules/semver/functions/diff.js","../node_modules/semver/functions/eq.js","../node_modules/semver/functions/gt.js","../node_modules/semver/functions/gte.js","../node_modules/semver/functions/inc.js","../node_modules/semver/functions/lt.js","../node_modules/semver/functions/lte.js","../node_modules/semver/functions/major.js","../node_modules/semver/functions/minor.js","../node_modules/semver/functions/neq.js","../node_modules/semver/functions/parse.js","../node_modules/semver/functions/patch.js","../node_modules/semver/functions/prerelease.js","../node_modules/semver/functions/rcompare.js","../node_modules/semver/functions/rsort.js","../node_modules/semver/functions/satisfies.js","../node_modules/semver/functions/sort.js","../node_modules/semver/functions/valid.js","../node_modules/semver/index.js","../node_modules/semver/internal/constants.js","../node_modules/semver/internal/debug.js","../node_modules/semver/internal/identifiers.js","../node_modules/semver/internal/parse-options.js","../node_modules/semver/internal/re.js","../node_modules/semver/ranges/gtr.js","../node_modules/semver/ranges/intersects.js","../node_modules/semver/ranges/ltr.js","../node_modules/semver/ranges/max-satisfying.js","../node_modules/semver/ranges/min-satisfying.js","../node_modules/semver/ranges/min-version.js","../node_modules/semver/ranges/outside.js","../node_modules/semver/ranges/simplify.js","../node_modules/semver/ranges/subset.js","../node_modules/semver/ranges/to-comparators.js","../node_modules/semver/ranges/valid.js","../node_modules/yallist/iterator.js","../node_modules/yallist/yallist.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js"],"sourcesContent":["import { TransportError } from \"@ledgerhq/errors\";\nexport type ResponseAcc =\n  | {\n      data: Buffer;\n      dataLength: number;\n      sequence: number;\n    }\n  | null\n  | undefined;\nconst Tag = 0x05;\n\nfunction asUInt16BE(value) {\n  const b = Buffer.alloc(2);\n  b.writeUInt16BE(value, 0);\n  return b;\n}\n\nconst initialAcc = {\n  data: Buffer.alloc(0),\n  dataLength: 0,\n  sequence: 0,\n};\n\n/**\n *\n */\nconst createHIDframing = (channel: number, packetSize: number) => {\n  return {\n    makeBlocks(apdu: Buffer): Buffer[] {\n      let data = Buffer.concat([asUInt16BE(apdu.length), apdu]);\n      const blockSize = packetSize - 5;\n      const nbBlocks = Math.ceil(data.length / blockSize);\n      data = Buffer.concat([\n        data, // fill data with padding\n        Buffer.alloc(nbBlocks * blockSize - data.length + 1).fill(0),\n      ]);\n      const blocks: Buffer[] = [];\n\n      for (let i = 0; i < nbBlocks; i++) {\n        const head = Buffer.alloc(5);\n        head.writeUInt16BE(channel, 0);\n        head.writeUInt8(Tag, 2);\n        head.writeUInt16BE(i, 3);\n        const chunk = data.slice(i * blockSize, (i + 1) * blockSize);\n        blocks.push(Buffer.concat([head, chunk]));\n      }\n\n      return blocks;\n    },\n\n    reduceResponse(acc: ResponseAcc, chunk: Buffer): ResponseAcc {\n      let { data, dataLength, sequence } = acc || initialAcc;\n\n      if (chunk.readUInt16BE(0) !== channel) {\n        throw new TransportError(\"Invalid channel\", \"InvalidChannel\");\n      }\n\n      if (chunk.readUInt8(2) !== Tag) {\n        throw new TransportError(\"Invalid tag\", \"InvalidTag\");\n      }\n\n      if (chunk.readUInt16BE(3) !== sequence) {\n        throw new TransportError(\"Invalid sequence\", \"InvalidSequence\");\n      }\n\n      if (!acc) {\n        dataLength = chunk.readUInt16BE(5);\n      }\n\n      sequence++;\n      const chunkData = chunk.slice(acc ? 5 : 7);\n      data = Buffer.concat([data, chunkData]);\n\n      if (data.length > dataLength) {\n        data = data.slice(0, dataLength);\n      }\n\n      return {\n        data,\n        dataLength,\n        sequence,\n      };\n    },\n\n    getReducedResult(acc: ResponseAcc): Buffer | null | undefined {\n      if (acc && acc.dataLength === acc.data.length) {\n        return acc.data;\n      }\n    },\n  };\n};\n\nexport default createHIDframing;\n","import semver from \"semver\";\n\n/**\n * The USB product IDs will be defined as MMII, encoding a model (MM) and an interface bitfield (II)\n *\n ** Model\n * Ledger Nano S : 0x10\n * Ledger Blue : 0x00\n * Ledger Nano X : 0x40\n *\n ** Interface support bitfield\n * Generic HID : 0x01\n * Keyboard HID : 0x02\n * U2F : 0x04\n * CCID : 0x08\n * WebUSB : 0x10\n */\nexport const IIGenericHID = 0x01;\nexport const IIKeyboardHID = 0x02;\nexport const IIU2F = 0x04;\nexport const IICCID = 0x08;\nexport const IIWebUSB = 0x10;\n\nexport enum DeviceModelId {\n  blue = \"blue\",\n  nanoS = \"nanoS\",\n  nanoSP = \"nanoSP\",\n  nanoX = \"nanoX\",\n  nanoFTS = \"nanoFTS\",\n}\n\nconst devices: { [key in DeviceModelId]: DeviceModel } = {\n  [DeviceModelId.blue]: {\n    id: DeviceModelId.blue,\n    productName: \"Ledger Blue\",\n    productIdMM: 0x00,\n    legacyUsbProductId: 0x0000,\n    usbOnly: true,\n    memorySize: 480 * 1024,\n    masks: [0x31000000, 0x31010000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n  },\n  [DeviceModelId.nanoS]: {\n    id: DeviceModelId.nanoS,\n    productName: \"Ledger Nano S\",\n    productIdMM: 0x10,\n    legacyUsbProductId: 0x0001,\n    usbOnly: true,\n    memorySize: 320 * 1024,\n    masks: [0x31100000],\n    getBlockSize: (firmwareVersion: string): number =>\n      semver.lt(semver.coerce(firmwareVersion) ?? \"\", \"2.0.0\")\n        ? 4 * 1024\n        : 2 * 1024,\n  },\n  [DeviceModelId.nanoSP]: {\n    id: DeviceModelId.nanoSP,\n    productName: \"Ledger Nano S Plus\",\n    productIdMM: 0x50,\n    legacyUsbProductId: 0x0005,\n    usbOnly: true,\n    memorySize: 1536 * 1024,\n    masks: [0x33100000],\n    getBlockSize: (_firmwareVersion: string): number => 32,\n  },\n  [DeviceModelId.nanoX]: {\n    id: DeviceModelId.nanoX,\n    productName: \"Ledger Nano X\",\n    productIdMM: 0x40,\n    legacyUsbProductId: 0x0004,\n    usbOnly: false,\n    memorySize: 2 * 1024 * 1024,\n    masks: [0x33000000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n    bluetoothSpec: [\n      {\n        serviceUuid: \"13d63400-2c97-0004-0000-4c6564676572\",\n        notifyUuid: \"13d63400-2c97-0004-0001-4c6564676572\",\n        writeUuid: \"13d63400-2c97-0004-0002-4c6564676572\",\n        writeCmdUuid: \"13d63400-2c97-0004-0003-4c6564676572\",\n      },\n    ],\n  },\n  [DeviceModelId.nanoFTS]: {\n    id: DeviceModelId.nanoFTS,\n    productName: \"Ledger Nano FTS\",\n    productIdMM: 0x60,\n    legacyUsbProductId: 0x0006,\n    usbOnly: false,\n    memorySize: 2 * 1024 * 1024, // ← ↓ TODO Update with actual values\n    masks: [0x33200000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n    bluetoothSpec: [\n      {\n        serviceUuid: \"13d63400-2c97-6004-0000-4c6564676572\",\n        notifyUuid: \"13d63400-2c97-6004-0001-4c6564676572\",\n        writeUuid: \"13d63400-2c97-6004-0002-4c6564676572\",\n        writeCmdUuid: \"13d63400-2c97-6004-0003-4c6564676572\",\n      },\n    ],\n  },\n};\n\nconst productMap = {\n  Blue: DeviceModelId.blue,\n  \"Nano S\": DeviceModelId.nanoS,\n  \"Nano S Plus\": DeviceModelId.nanoSP,\n  \"Nano X\": DeviceModelId.nanoX,\n  \"Nano FTS\": DeviceModelId.nanoFTS,\n};\n\nconst devicesList: DeviceModel[] = Object.values(devices);\n\n/**\n *\n */\nexport const ledgerUSBVendorId = 0x2c97;\n\n/**\n *\n */\nexport const getDeviceModel = (id: DeviceModelId): DeviceModel => {\n  const info = devices[id];\n  if (!info) throw new Error(\"device '\" + id + \"' does not exist\");\n  return info;\n};\n\n/**\n * Given a `targetId`, return the deviceModel associated to it,\n * based on the first two bytes.\n */\nexport const identifyTargetId = (\n  targetId: number\n): DeviceModel | null | undefined => {\n  const deviceModel = devicesList.find(({ masks }) =>\n    masks.find((mask) => (targetId & 0xffff0000) === mask)\n  );\n\n  return deviceModel;\n};\n\n/**\n *\n */\nexport const identifyUSBProductId = (\n  usbProductId: number\n): DeviceModel | null | undefined => {\n  const legacy = devicesList.find((d) => d.legacyUsbProductId === usbProductId);\n  if (legacy) return legacy;\n  const mm = usbProductId >> 8;\n  const deviceModel = devicesList.find((d) => d.productIdMM === mm);\n  return deviceModel;\n};\n\nexport const identifyProductName = (\n  productName: string\n): DeviceModel | null | undefined => {\n  const deviceModel = devicesList.find((d) => d.id === productMap[productName]);\n  return deviceModel;\n};\n\nconst bluetoothServices: string[] = [];\nconst serviceUuidToInfos: Record<string, BluetoothInfos> = {};\n\nfor (const id in devices) {\n  const deviceModel = devices[id];\n  const { bluetoothSpec } = deviceModel;\n  if (bluetoothSpec) {\n    for (let i = 0; i < bluetoothSpec.length; i++) {\n      const spec = bluetoothSpec[i];\n      bluetoothServices.push(spec.serviceUuid);\n      serviceUuidToInfos[spec.serviceUuid] = serviceUuidToInfos[\n        spec.serviceUuid.replace(/-/g, \"\")\n      ] = {\n        deviceModel,\n        ...spec,\n      };\n    }\n  }\n}\n\n/**\n *\n */\nexport const getBluetoothServiceUuids = (): string[] => bluetoothServices;\n\n/**\n *\n */\nexport const getInfosForServiceUuid = (\n  uuid: string\n): BluetoothInfos | undefined => serviceUuidToInfos[uuid.toLowerCase()];\n\n/**\n *\n */\nexport interface DeviceModel {\n  id: DeviceModelId;\n  productName: string;\n  productIdMM: number;\n  legacyUsbProductId: number;\n  usbOnly: boolean;\n  memorySize: number;\n  masks: number[];\n  // blockSize: number, // THIS FIELD IS DEPRECATED, use getBlockSize\n  getBlockSize: (firmwareVersion: string) => number;\n  bluetoothSpec?: {\n    serviceUuid: string;\n    writeUuid: string;\n    writeCmdUuid: string;\n    notifyUuid: string;\n  }[];\n}\n\n/**\n *\n */\nexport interface BluetoothInfos {\n  deviceModel: DeviceModel;\n  serviceUuid: string;\n  writeUuid: string;\n  writeCmdUuid: string;\n  notifyUuid: string;\n}\n","/**\n * A Log object\n */\nexport interface Log {\n  type: string;\n  message?: string;\n  data?: any;\n  // unique amount all logs\n  id: string;\n  // date of the log\n  date: Date;\n}\nexport type Unsubscribe = () => void;\nexport type Subscriber = (arg0: Log) => void;\nlet id = 0;\nconst subscribers: Subscriber[] = [];\n\n/**\n * log something\n * @param type a namespaced identifier of the log (it is not a level like \"debug\", \"error\" but more like \"apdu-in\", \"apdu-out\", etc...)\n * @param message a clear message of the log associated to the type\n */\nexport const log = (type: string, message?: string, data?: any) => {\n  const obj: Log = {\n    type,\n    id: String(++id),\n    date: new Date(),\n  };\n  if (message) obj.message = message;\n  if (data) obj.data = data;\n  dispatch(obj);\n};\n\n/**\n * listen to logs.\n * @param cb that is called for each future log() with the Log object\n * @return a function that can be called to unsubscribe the listener\n */\nexport const listen = (cb: Subscriber): Unsubscribe => {\n  subscribers.push(cb);\n  return () => {\n    const i = subscribers.indexOf(cb);\n\n    if (i !== -1) {\n      // equivalent of subscribers.splice(i, 1) // https://twitter.com/Rich_Harris/status/1125850391155965952\n      subscribers[i] = subscribers[subscribers.length - 1];\n      subscribers.pop();\n    }\n  };\n};\n\nfunction dispatch(log: Log) {\n  for (let i = 0; i < subscribers.length; i++) {\n    try {\n      subscribers[i](log);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\n// for debug purpose\n\ndeclare global {\n  interface Window {\n    __ledgerLogsListen: any;\n  }\n}\n\nif (typeof window !== \"undefined\") {\n  window.__ledgerLogsListen = listen;\n}\n","import Transport from \"@ledgerhq/hw-transport\";\nimport type {\n  Observer,\n  DescriptorEvent,\n  Subscription,\n} from \"@ledgerhq/hw-transport\";\nimport hidFraming from \"@ledgerhq/devices/lib/hid-framing\";\nimport { identifyUSBProductId, ledgerUSBVendorId } from \"@ledgerhq/devices\";\nimport type { DeviceModel } from \"@ledgerhq/devices\";\nimport { log } from \"@ledgerhq/logs\";\nimport {\n  TransportOpenUserCancelled,\n  DisconnectedDeviceDuringOperation,\n  DisconnectedDevice,\n  TransportError,\n} from \"@ledgerhq/errors\";\n\nconst ledgerDevices = [\n  {\n    vendorId: ledgerUSBVendorId,\n  },\n];\n\nconst isSupported = () =>\n  Promise.resolve(!!(window.navigator && window.navigator.hid));\n\nconst getHID = (): HID => {\n  // $FlowFixMe\n  const { hid } = navigator;\n  if (!hid)\n    throw new TransportError(\n      \"navigator.hid is not supported\",\n      \"HIDNotSupported\"\n    );\n  return hid;\n};\n\nasync function requestLedgerDevices(): Promise<HIDDevice[]> {\n  const device = await getHID().requestDevice({\n    filters: ledgerDevices,\n  });\n  if (Array.isArray(device)) return device;\n  return [device];\n}\n\nasync function getLedgerDevices(): Promise<HIDDevice[]> {\n  const devices = await getHID().getDevices();\n  return devices.filter((d) => d.vendorId === ledgerUSBVendorId);\n}\n\nasync function getFirstLedgerDevice(): Promise<HIDDevice> {\n  const existingDevices = await getLedgerDevices();\n  if (existingDevices.length > 0) return existingDevices[0];\n  const devices = await requestLedgerDevices();\n  return devices[0];\n}\n/**\n * WebHID Transport implementation\n * @example\n * import TransportWebHID from \"@ledgerhq/hw-transport-webhid\";\n * ...\n * TransportWebHID.create().then(transport => ...)\n */\n\nexport default class TransportWebHID extends Transport {\n  device: HIDDevice;\n  deviceModel: DeviceModel | null | undefined;\n  channel = Math.floor(Math.random() * 0xffff);\n  packetSize = 64;\n\n  constructor(device: HIDDevice) {\n    super();\n    this.device = device;\n    this.deviceModel =\n      typeof device.productId === \"number\"\n        ? identifyUSBProductId(device.productId)\n        : undefined;\n    device.addEventListener(\"inputreport\", this.onInputReport);\n  }\n\n  inputs: Buffer[] = [];\n  inputCallback: ((arg0: Buffer) => void) | null | undefined;\n  read = (): Promise<Buffer> => {\n    if (this.inputs.length) {\n      return Promise.resolve((this.inputs.shift() as unknown) as Buffer);\n    }\n\n    return new Promise((success) => {\n      this.inputCallback = success;\n    });\n  };\n  onInputReport = (e: HIDInputReportEvent) => {\n    const buffer = Buffer.from(e.data.buffer);\n\n    if (this.inputCallback) {\n      this.inputCallback(buffer);\n      this.inputCallback = null;\n    } else {\n      this.inputs.push(buffer);\n    }\n  };\n\n  /**\n   * Check if WebUSB transport is supported.\n   */\n  static isSupported = isSupported;\n\n  /**\n   * List the WebUSB devices that was previously authorized by the user.\n   */\n  static list = getLedgerDevices;\n\n  /**\n   * Actively listen to WebUSB devices and emit ONE device\n   * that was either accepted before, if not it will trigger the native permission UI.\n   *\n   * Important: it must be called in the context of a UI click!\n   */\n  static listen = (\n    observer: Observer<DescriptorEvent<HIDDevice>>\n  ): Subscription => {\n    let unsubscribed = false;\n    getFirstLedgerDevice().then(\n      (device) => {\n        if (!device) {\n          observer.error(\n            new TransportOpenUserCancelled(\"Access denied to use Ledger device\")\n          );\n        } else if (!unsubscribed) {\n          const deviceModel =\n            typeof device.productId === \"number\"\n              ? identifyUSBProductId(device.productId)\n              : undefined;\n          observer.next({\n            type: \"add\",\n            descriptor: device,\n            deviceModel,\n          });\n          observer.complete();\n        }\n      },\n      (error) => {\n        observer.error(new TransportOpenUserCancelled(error.message));\n      }\n    );\n\n    function unsubscribe() {\n      unsubscribed = true;\n    }\n\n    return {\n      unsubscribe,\n    };\n  };\n\n  /**\n   * Similar to create() except it will always display the device permission (even if some devices are already accepted).\n   */\n  static async request() {\n    const [device] = await requestLedgerDevices();\n    return TransportWebHID.open(device);\n  }\n\n  /**\n   * Similar to create() except it will never display the device permission (it returns a Promise<?Transport>, null if it fails to find a device).\n   */\n  static async openConnected() {\n    const devices = await getLedgerDevices();\n    if (devices.length === 0) return null;\n    return TransportWebHID.open(devices[0]);\n  }\n\n  /**\n   * Create a Ledger transport with a HIDDevice\n   */\n  static async open(device: HIDDevice) {\n    await device.open();\n    const transport = new TransportWebHID(device);\n\n    const onDisconnect = (e) => {\n      if (device === e.device) {\n        getHID().removeEventListener(\"disconnect\", onDisconnect);\n\n        transport._emitDisconnect(new DisconnectedDevice());\n      }\n    };\n\n    getHID().addEventListener(\"disconnect\", onDisconnect);\n    return transport;\n  }\n\n  _disconnectEmitted = false;\n  _emitDisconnect = (e: Error) => {\n    if (this._disconnectEmitted) return;\n    this._disconnectEmitted = true;\n    this.emit(\"disconnect\", e);\n  };\n\n  /**\n   * Release the transport device\n   */\n  async close(): Promise<void> {\n    await this.exchangeBusyPromise;\n    this.device.removeEventListener(\"inputreport\", this.onInputReport);\n    await this.device.close();\n  }\n\n  /**\n   * Exchange with the device using APDU protocol.\n   * @param apdu\n   * @returns a promise of apdu response\n   */\n  exchange = async (apdu: Buffer): Promise<Buffer> => {\n    const b = await this.exchangeAtomicImpl(async () => {\n      const { channel, packetSize } = this;\n      log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n      const framing = hidFraming(channel, packetSize);\n      // Write...\n      const blocks = framing.makeBlocks(apdu);\n\n      for (let i = 0; i < blocks.length; i++) {\n        await this.device.sendReport(0, blocks[i]);\n      }\n\n      // Read...\n      let result;\n      let acc;\n\n      while (!(result = framing.getReducedResult(acc))) {\n        const buffer = await this.read();\n        acc = framing.reduceResponse(acc, buffer);\n      }\n\n      log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n      return result;\n    }).catch((e) => {\n      if (e && e.message && e.message.includes(\"write\")) {\n        this._emitDisconnect(e);\n\n        throw new DisconnectedDeviceDuringOperation(e.message);\n      }\n\n      throw e;\n    });\n    return b as Buffer;\n  };\n\n  setScrambleKey() {}\n}\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver, '<', comp.semver, options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver, '>', comp.semver, options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst {re, t} = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split(/\\s*\\|\\|\\s*/)\n      // map the range to a 2d array of comparators\n      .map(range => this.parseRange(range.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0)\n        this.set = [first]\n      else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    range = range.trim()\n\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts = Object.keys(this.options).join(',')\n    const memoKey = `parseRange:${memoOpts}:${range}`\n    const cached = cache.get(memoKey)\n    if (cached)\n      return cached\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range, re[t.COMPARATORTRIM])\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    const compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n      // in loose mode, throw out any that are not valid comparators\n      .filter(this.options.loose ? comp => !!comp.match(compRe) : () => true)\n      .map(comp => new Comparator(comp, this.options))\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const l = rangeList.length\n    const rangeMap = new Map()\n    for (const comp of rangeList) {\n      if (isNullSet(comp))\n        return [comp]\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has(''))\n      rangeMap.delete('')\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace\n} = require('../internal/re')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceTilde(comp, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceCaret(comp, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((comp) => {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<')\n        pr = '-0'\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (this.prerelease[0] === identifier) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst {re, t} = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null)\n    return null\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const parse = require('./parse')\nconst eq = require('./eq')\n\nconst diff = (version1, version2) => {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    const v1 = parse(version1)\n    const v2 = parse(version2)\n    const hasPre = v1.prerelease.length || v2.prerelease.length\n    const prefix = hasPre ? 'pre' : ''\n    const defaultResult = hasPre ? 'prerelease' : ''\n    for (const key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier) => {\n  if (typeof (options) === 'string') {\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(version, options).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const {MAX_LENGTH} = require('../internal/constants')\nconst { re, t } = require('../internal/re')\nconst SemVer = require('../classes/semver')\n\nconst parseOptions = require('../internal/parse-options')\nconst parse = (version, options) => {\n  options = parseOptions(options)\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  const r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nmodule.exports = parse\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nmodule.exports = {\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: require('./internal/constants').SEMVER_SPEC_VERSION,\n  SemVer: require('./classes/semver'),\n  compareIdentifiers: require('./internal/identifiers').compareIdentifiers,\n  rcompareIdentifiers: require('./internal/identifiers').rcompareIdentifiers,\n  parse: require('./functions/parse'),\n  valid: require('./functions/valid'),\n  clean: require('./functions/clean'),\n  inc: require('./functions/inc'),\n  diff: require('./functions/diff'),\n  major: require('./functions/major'),\n  minor: require('./functions/minor'),\n  patch: require('./functions/patch'),\n  prerelease: require('./functions/prerelease'),\n  compare: require('./functions/compare'),\n  rcompare: require('./functions/rcompare'),\n  compareLoose: require('./functions/compare-loose'),\n  compareBuild: require('./functions/compare-build'),\n  sort: require('./functions/sort'),\n  rsort: require('./functions/rsort'),\n  gt: require('./functions/gt'),\n  lt: require('./functions/lt'),\n  eq: require('./functions/eq'),\n  neq: require('./functions/neq'),\n  gte: require('./functions/gte'),\n  lte: require('./functions/lte'),\n  cmp: require('./functions/cmp'),\n  coerce: require('./functions/coerce'),\n  Comparator: require('./classes/comparator'),\n  Range: require('./classes/range'),\n  satisfies: require('./functions/satisfies'),\n  toComparators: require('./ranges/to-comparators'),\n  maxSatisfying: require('./ranges/max-satisfying'),\n  minSatisfying: require('./ranges/min-satisfying'),\n  minVersion: require('./ranges/min-version'),\n  validRange: require('./ranges/valid'),\n  outside: require('./ranges/outside'),\n  gtr: require('./ranges/gtr'),\n  ltr: require('./ranges/ltr'),\n  intersects: require('./ranges/intersects'),\n  simplifyRange: require('./ranges/simplify'),\n  subset: require('./ranges/subset'),\n}\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers\n}\n","// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((options, k) => {\n    options[k] = true\n    return options\n  }, {})\nmodule.exports = parseOptions\n","const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\.0\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\.0\\.0-0\\\\s*$')\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\nmodule.exports = intersects\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin)))\n      minver = setMin\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst {ANY} = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let min = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!min)\n        min = version\n    } else {\n      if (prev) {\n        set.push([min, prev])\n      }\n      prev = null\n      min = null\n    }\n  }\n  if (min)\n    set.push([min, null])\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max)\n      ranges.push(min)\n    else if (!max && min === v[0])\n      ranges.push('*')\n    else if (!max)\n      ranges.push(`>=${min}`)\n    else if (min === v[0])\n      ranges.push(`<=${max}`)\n    else\n      ranges.push(`${min} - ${max}`)\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom)\n    return true\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub)\n        continue OUTER\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull)\n      return false\n  }\n  return true\n}\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom)\n    return true\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY)\n      return true\n    else if (options.includePrerelease)\n      sub = [ new Comparator('>=0.0.0-0') ]\n    else\n      sub = [ new Comparator('>=0.0.0') ]\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease)\n      return true\n    else\n      dom = [ new Comparator('>=0.0.0') ]\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=')\n      gt = higherGT(gt, c, options)\n    else if (c.operator === '<' || c.operator === '<=')\n      lt = lowerLT(lt, c, options)\n    else\n      eqSet.add(c.semver)\n  }\n\n  if (eqSet.size > 1)\n    return null\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0)\n      return null\n    else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<='))\n      return null\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options))\n      return null\n\n    if (lt && !satisfies(eq, String(lt), options))\n      return null\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options))\n        return false\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt)\n          return false\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options))\n        return false\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt)\n          return false\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options))\n        return false\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0)\n      return false\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0)\n    return false\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0)\n    return false\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre)\n    return false\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["asUInt16BE","value","b","Buffer","alloc","writeUInt16BE","initialAcc","data","dataLength","sequence","channel","packetSize","makeBlocks","apdu","concat","length","blockSize","nbBlocks","Math","ceil","fill","blocks","i","head","writeUInt8","chunk","slice","push","reduceResponse","acc","readUInt16BE","TransportError","readUInt8","chunkData","getReducedResult","DeviceModelId","devices","blue","id","productName","productIdMM","legacyUsbProductId","usbOnly","memorySize","masks","getBlockSize","_firwareVersion","nanoS","firmwareVersion","nanoSP","_firmwareVersion","nanoX","bluetoothSpec","serviceUuid","notifyUuid","writeUuid","writeCmdUuid","nanoFTS","devicesList","Object","values","identifyUSBProductId","usbProductId","legacy","find","d","mm","bluetoothServices","serviceUuidToInfos","deviceModel","spec","replace","subscribers","log","type","message","obj","String","date","Date","e","console","error","dispatch","window","__ledgerLogsListen","cb","indexOf","pop","ledgerDevices","vendorId","isSupported","Promise","resolve","navigator","hid","getHID","requestLedgerDevices","requestDevice","filters","device","Array","isArray","getLedgerDevices","getDevices","filter","floor","random","inputs","read","shift","success","inputCallback","onInputReport","buffer","from","_disconnectEmitted","_emitDisconnect","emit","exchange","this","exchangeAtomicImpl","toString","framing","sendReport","result","includes","DisconnectedDeviceDuringOperation","productId","undefined","addEventListener","request","TransportWebHID","open","openConnected","transport","removeEventListener","DisconnectedDevice","close","exchangeBusyPromise","setScrambleKey","list","listen","observer","unsubscribed","existingDevices","getFirstLedgerDevice","then","next","descriptor","complete","TransportOpenUserCancelled","unsubscribe","Transport","Yallist","require","MAX","Symbol","LENGTH","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","UPDATE_AGE_ON_GET","naiveLength","LRUCache","options","max","TypeError","Infinity","lc","stale","maxAge","dispose","noDisposeOnSet","updateAgeOnGet","reset","mL","trim","allowStale","mA","lC","forEach","hit","key","fn","thisp","walker","tail","prev","forEachStep","toArray","map","k","Map","isStale","v","now","h","len","has","del","get","item","Entry","unshift","set","node","arr","l","expiresAt","self","doUse","unshiftNode","diff","delete","removeNode","call","module","exports","ANY","Comparator","comp","parseOptions","loose","debug","parse","semver","operator","version","r","re","t","COMPARATORLOOSE","COMPARATOR","m","match","SemVer","er","cmp","includePrerelease","Range","test","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","range","raw","format","split","parseRange","c","first","isNullSet","isAny","comps","join","memoOpts","keys","memoKey","cached","cache","hr","HYPHENRANGELOOSE","HYPHENRANGE","hyphenReplace","COMPARATORTRIM","comparatorTrimReplace","TILDETRIM","tildeTrimReplace","CARETTRIM","caretTrimReplace","compRe","rangeList","parseComparator","replaceGTE0","rangeMap","size","some","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","intersects","testSet","comparators","remainingComparators","testComparator","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","toLowerCase","replaceTilde","TILDELOOSE","TILDE","_","M","p","pr","ret","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","prerelease","allowed","major","minor","patch","MAX_LENGTH","MAX_SAFE_INTEGER","compareIdentifiers","LOOSE","FULL","num","build","other","compareMain","comparePre","a","release","identifier","inc","isNaN","Error","s","eq","neq","gt","gte","lt","lte","op","rtl","COERCERTL","exec","index","lastIndex","COERCE","versionA","versionB","compare","compareBuild","version1","version2","v1","v2","hasPre","prefix","defaultResult","parsed","sort","internalRe","src","tokens","SEMVER_SPEC_VERSION","rcompareIdentifiers","valid","clean","rcompare","compareLoose","rsort","coerce","satisfies","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","outside","gtr","ltr","simplifyRange","subset","Number","MAX_SAFE_COMPONENT_LENGTH","process","NODE_DEBUG","args","numeric","anum","bnum","opts","reduce","R","createToken","name","isGlobal","RegExp","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","LONETILDE","LONECARET","r1","r2","versions","maxSV","rangeObj","min","minSV","minver","setMin","comparator","compver","hilo","gtfn","ltefn","ltfn","ecomp","high","low","ranges","simplified","original","simpleSubset","sub","dom","gtltComp","eqSet","Set","higherGT","lowerLT","add","higher","lower","hasDomLT","hasDomGT","needDomLTPre","needDomGTPre","sawNonNull","OUTER","simpleSub","simpleDom","isSub","prototype","iterator","arguments","insert","inserted","Node","create","pushNode","res","forEachReverse","n","getReverse","mapReverse","initial","reduceReverse","toArrayReverse","sliceReverse","splice","start","deleteCount","reverse","arrayLikeToArray","__esModule","iter","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread"],"sourceRoot":""}